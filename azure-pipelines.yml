trigger:
- main  # Trigger pipeline on commits to the 'main' branch

pool:
  vmImage: 'ubuntu-latest'  # Use the latest Ubuntu image, similar to Docker-based executor in CircleCI

jobs:
- job: test
  displayName: 'Run Python Selenium Tests'
  steps:

    # Checkout the code from the repository
    - task: Checkout@2  # This is a predefined Azure DevOps task to check out your repository

    # Install Chrome dependencies
    - script: |
        sudo apt-get update
        sudo apt-get install -y wget curl unzip
        sudo apt-get install -y libx11-dev libgconf-2-4 libnss3 libgdk-pixbuf2.0-0 libxcomposite1 libxdamage1 libxi6 libxtst6
        sudo apt-get install -y libasound2 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdbus-1-3 libgdk-pixbuf2.0-0
        sudo apt-get install -y libnspr4 libnss3 libxrandr2
      displayName: 'Install Chrome dependencies'

    # Install Google Chrome
    - script: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || true
        sudo apt-get -f install -y  # Fix any missing dependencies
      displayName: 'Install Google Chrome'

    # Install ChromeDriver based on the version of Google Chrome
    - script: |
        CHROME_VERSION=$(google-chrome-stable --version | awk '{print $3}' | sed 's/\([0-9]*\)\([0-9]*\)/\1/g' | tr -d '.')
        echo "Detected Chrome version: $CHROME_VERSION"

        # Fetch the corresponding ChromeDriver version
        CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
        echo "Detected ChromeDriver version: $CHROMEDRIVER_VERSION"

        # Check if the ChromeDriver version is empty or not found
        if [ -z "$CHROMEDRIVER_VERSION" ]; then
          echo "Error: Unable to find a matching ChromeDriver version for Chrome version $CHROME_VERSION"
          exit 1
        fi

        # Download ChromeDriver and install it
        wget https://storage.googleapis.com/chrome-for-testing-public/131.0.6778.204/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
      displayName: 'Install ChromeDriver'

    # Install Python dependencies from requirements.txt
    - script: |
        python -m venv venv
        . venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt  # Install all dependencies listed in requirements.txt
      displayName: 'Install dependencies from requirements.txt'

    # Run tests with pytest
    - script: |
        source venv/bin/activate  # Activate the virtual environment
        pytest ./testFiles                  # Run the tests with pytest
      displayName: 'Run tests'

    # Publish test results to Azure DevOps (Optional step for test result reporting)
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-*.xml'  # Adjust this based on your pytest output format
        mergeTestResults: true
      condition: succeededOrFailed()  # Always run this step, even if the tests fail
      displayName: 'Publish Test Results'
